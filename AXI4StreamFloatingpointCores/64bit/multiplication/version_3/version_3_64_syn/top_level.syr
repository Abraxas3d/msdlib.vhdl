Release 14.4 - xst P.49d (lin64)
Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
--> 
Parameter TMPDIR set to xst/projnav.tmp


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.05 secs
 
--> 
Parameter xsthdpdir set to xst


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.05 secs
 
--> 
Reading design: top_level.prj

TABLE OF CONTENTS
  1) Synthesis Options Summary
  2) HDL Parsing
  3) HDL Elaboration
  4) HDL Synthesis
       4.1) HDL Synthesis Report
  5) Advanced HDL Synthesis
       5.1) Advanced HDL Synthesis Report
  6) Low Level Synthesis
  7) Partition Report
  8) Design Summary
       8.1) Primitive and Black Box Usage
       8.2) Device utilization summary
       8.3) Partition Resource Summary
       8.4) Timing Report
            8.4.1) Clock Information
            8.4.2) Asynchronous Control Signals Information
            8.4.3) Timing Summary
            8.4.4) Timing Details
            8.4.5) Cross Clock Domains Report


=========================================================================
*                      Synthesis Options Summary                        *
=========================================================================
---- Source Parameters
Input File Name                    : "top_level.prj"
Ignore Synthesis Constraint File   : NO

---- Target Parameters
Output File Name                   : "top_level"
Output Format                      : NGC
Target Device                      : xc6vlx240t-1-ff1156

---- Source Options
Top Module Name                    : top_level
Automatic FSM Extraction           : YES
FSM Encoding Algorithm             : Auto
Safe Implementation                : No
FSM Style                          : LUT
RAM Extraction                     : Yes
RAM Style                          : Auto
ROM Extraction                     : Yes
Shift Register Extraction          : YES
ROM Style                          : Auto
Resource Sharing                   : YES
Asynchronous To Synchronous        : NO
Shift Register Minimum Size        : 2
Use DSP Block                      : Auto
Automatic Register Balancing       : No

---- Target Options
LUT Combining                      : Auto
Reduce Control Sets                : Auto
Add IO Buffers                     : YES
Global Maximum Fanout              : 100000
Add Generic Clock Buffer(BUFG)     : 32
Register Duplication               : YES
Optimize Instantiated Primitives   : NO
Use Clock Enable                   : Auto
Use Synchronous Set                : Auto
Use Synchronous Reset              : Auto
Pack IO Registers into IOBs        : Auto
Equivalent register Removal        : YES

---- General Options
Optimization Goal                  : Speed
Optimization Effort                : 1
Power Reduction                    : NO
Keep Hierarchy                     : No
Netlist Hierarchy                  : As_Optimized
RTL Output                         : Yes
Global Optimization                : AllClockNets
Read Cores                         : YES
Write Timing Constraints           : NO
Cross Clock Analysis               : NO
Hierarchy Separator                : /
Bus Delimiter                      : <>
Case Specifier                     : Maintain
Slice Utilization Ratio            : 100
BRAM Utilization Ratio             : 100
DSP48 Utilization Ratio            : 100
Auto BRAM Packing                  : NO
Slice Utilization Ratio Delta      : 5

=========================================================================


=========================================================================
*                          HDL Parsing                                  *
=========================================================================
Parsing VHDL file "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/pkg_global.vhd" into library work
Parsing package <pkg_global>.
Parsing package body <pkg_global>.
Parsing VHDL file "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/pkg_component.vhd" into library work
Parsing package <pkg_component>.
Parsing VHDL file "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/float_multiply.vhd" into library work
Parsing entity <Compressor_15_3>.
Parsing architecture <arch> of entity <compressor_15_3>.
Parsing entity <Compressor_14_3>.
Parsing architecture <arch> of entity <compressor_14_3>.
Parsing entity <Compressor_23_3>.
Parsing architecture <arch> of entity <compressor_23_3>.
Parsing entity <Compressor_3_2>.
Parsing architecture <arch> of entity <compressor_3_2>.
Parsing entity <Compressor_2_2>.
Parsing architecture <arch> of entity <compressor_2_2>.
Parsing entity <IntAdder_103_f300_uid125>.
Parsing architecture <arch> of entity <intadder_103_f300_uid125>.
Parsing entity <IntMultiplier_UsingDSP_53_53_106_unsigned_uid4>.
Parsing architecture <arch> of entity <intmultiplier_usingdsp_53_53_106_unsigned_uid4>.
Parsing entity <IntAdder_65_f300_uid133>.
Parsing architecture <arch> of entity <intadder_65_f300_uid133>.
Parsing entity <float_multiply>.
Parsing architecture <arch> of entity <float_multiply>.
Parsing VHDL file "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/fifo.vhd" into library work
Parsing entity <fifo>.
Parsing architecture <SIM> of entity <fifo>.
Parsing entity <valid_buffer>.
Parsing architecture <SIM> of entity <valid_buffer>.
Parsing VHDL file "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/data_stall.vhd" into library work
Parsing entity <data_stall>.
Parsing architecture <sim> of entity <data_stall>.
Parsing VHDL file "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/data_extend.vhd" into library work
Parsing entity <data_extend>.
Parsing architecture <SIM> of entity <data_extend>.
Parsing VHDL file "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/data_downsize.vhd" into library work
Parsing entity <data_downsize>.
Parsing architecture <SIM> of entity <data_downsize>.
Parsing VHDL file "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/top_level.vhd" into library work
Parsing entity <top_level>.
Parsing architecture <SIM> of entity <top_level>.

=========================================================================
*                            HDL Elaboration                            *
=========================================================================

Elaborating entity <top_level> (architecture <SIM>) from library <work>.

Elaborating entity <data_stall> (architecture <sim>) from library <work>.

Elaborating entity <data_extend> (architecture <SIM>) from library <work>.

Elaborating entity <fifo> (architecture <SIM>) from library <work>.

Elaborating entity <valid_buffer> (architecture <SIM>) from library <work>.

Elaborating entity <float_multiply> (architecture <arch>) from library <work>.

Elaborating entity <IntMultiplier_UsingDSP_53_53_106_unsigned_uid4> (architecture <arch>) from library <work>.

Elaborating entity <Compressor_14_3> (architecture <arch>) from library <work>.

Elaborating entity <Compressor_23_3> (architecture <arch>) from library <work>.

Elaborating entity <Compressor_15_3> (architecture <arch>) from library <work>.

Elaborating entity <Compressor_3_2> (architecture <arch>) from library <work>.

Elaborating entity <IntAdder_103_f300_uid125> (architecture <arch>) from library <work>.
WARNING:HDLCompiler:1127 - "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/float_multiply.vhd" Line 343: Assignment to sum_l0_idx1 ignored, since the identifier is never used
WARNING:HDLCompiler:1127 - "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/float_multiply.vhd" Line 344: Assignment to c_l0_idx1 ignored, since the identifier is never used
WARNING:HDLCompiler:1127 - "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/float_multiply.vhd" Line 348: Assignment to c_l1_idx1 ignored, since the identifier is never used

Elaborating entity <IntAdder_65_f300_uid133> (architecture <arch>) from library <work>.

Elaborating entity <data_downsize> (architecture <SIM>) from library <work>.
WARNING:HDLCompiler:1127 - "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/data_downsize.vhd" Line 95: Assignment to s_d1 ignored, since the identifier is never used
WARNING:HDLCompiler:1127 - "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/data_downsize.vhd" Line 97: Assignment to exp_zero ignored, since the identifier is never used

=========================================================================
*                           HDL Synthesis                               *
=========================================================================

Synthesizing Unit <top_level>.
    Related source file is "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/top_level.vhd".
    Summary:
	no macro.
Unit <top_level> synthesized.

Synthesizing Unit <data_stall>.
    Related source file is "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/data_stall.vhd".
    Found 3-bit register for signal <stall_data>.
    Found 64-bit register for signal <d_temp1>.
    Found 64-bit register for signal <d_temp2>.
    Found 64-bit register for signal <data_out1>.
    Found 64-bit register for signal <data_out2>.
    Found 64-bit register for signal <data_out3>.
    Found 64-bit register for signal <data_out4>.
    Found finite state machine <FSM_0> for signal <stall_data>.
    -----------------------------------------------------------------------
    | States             | 6                                              |
    | Transitions        | 13                                             |
    | Inputs             | 4                                              |
    | Outputs            | 5                                              |
    | Clock              | aclk (rising_edge)                             |
    | Reset              | aresetn (negative)                             |
    | Reset type         | asynchronous                                   |
    | Reset State        | idle                                           |
    | Power Up State     | idle                                           |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Summary:
	inferred 384 D-type flip-flop(s).
	inferred   3 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <data_stall> synthesized.

Synthesizing Unit <data_extend>.
    Related source file is "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/data_extend.vhd".
    Found 2-bit register for signal <ext_data>.
    Found 64-bit register for signal <data_in>.
    Found 66-bit register for signal <temp_data>.
    Found 66-bit register for signal <temp_d1>.
    Found finite state machine <FSM_1> for signal <ext_data>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 6                                              |
    | Inputs             | 2                                              |
    | Outputs            | 4                                              |
    | Clock              | aclk (rising_edge)                             |
    | Reset              | aresetn (negative)                             |
    | Reset type         | asynchronous                                   |
    | Reset State        | idle                                           |
    | Power Up State     | idle                                           |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Summary:
	inferred 196 D-type flip-flop(s).
	inferred   3 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <data_extend> synthesized.

Synthesizing Unit <fifo>.
    Related source file is "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/fifo.vhd".
WARNING:Xst:647 - Input <aresetn> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Summary:
	no macro.
Unit <fifo> synthesized.

Synthesizing Unit <valid_buffer>.
    Related source file is "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/fifo.vhd".
    Found 1-bit register for signal <output>.
    Summary:
	inferred   1 D-type flip-flop(s).
Unit <valid_buffer> synthesized.

Synthesizing Unit <float_multiply>.
    Related source file is "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/float_multiply.vhd".
    Found 1-bit register for signal <sign_d2>.
    Found 1-bit register for signal <sign_d3>.
    Found 1-bit register for signal <sign_d4>.
    Found 13-bit register for signal <expSum_d1>.
    Found 13-bit register for signal <expSum_d2>.
    Found 13-bit register for signal <expSum_d3>.
    Found 2-bit register for signal <exc_d1>.
    Found 2-bit register for signal <exc_d2>.
    Found 2-bit register for signal <exc_d3>.
    Found 2-bit register for signal <exc_d4>.
    Found 1-bit register for signal <sigProdExt_d1<54>>.
    Found 65-bit register for signal <expSig_d1>.
    Found 1-bit register for signal <sticky_d1>.
    Found 1-bit register for signal <guard_d1>.
    Found 1-bit register for signal <sign_d1>.
    Found 13-bit adder for signal <expSumPreSub> created at line 4023.
    Found 13-bit adder for signal <expPostNorm> created at line 4046.
    Found 13-bit subtractor for signal <expSum> created at line 3983.
    Found 16x2-bit Read Only RAM for signal <exc>
    Found 4x2-bit Read Only RAM for signal <excPostNorm>
    Summary:
	inferred   2 RAM(s).
	inferred   3 Adder/Subtractor(s).
	inferred 119 D-type flip-flop(s).
	inferred   2 Multiplexer(s).
Unit <float_multiply> synthesized.

Synthesizing Unit <IntMultiplier_UsingDSP_53_53_106_unsigned_uid4>.
    Related source file is "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/float_multiply.vhd".
    Found 1-bit register for signal <heap_bh6_w105_0_d2>.
    Found 1-bit register for signal <heap_bh6_w104_0_d1>.
    Found 1-bit register for signal <heap_bh6_w104_0_d2>.
    Found 1-bit register for signal <heap_bh6_w103_0_d1>.
    Found 1-bit register for signal <heap_bh6_w103_0_d2>.
    Found 1-bit register for signal <heap_bh6_w102_0_d1>.
    Found 1-bit register for signal <heap_bh6_w102_0_d2>.
    Found 1-bit register for signal <heap_bh6_w101_0_d1>.
    Found 1-bit register for signal <heap_bh6_w101_0_d2>.
    Found 1-bit register for signal <heap_bh6_w100_0_d1>.
    Found 1-bit register for signal <heap_bh6_w100_0_d2>.
    Found 1-bit register for signal <heap_bh6_w99_0_d1>.
    Found 1-bit register for signal <heap_bh6_w99_0_d2>.
    Found 1-bit register for signal <heap_bh6_w98_0_d1>.
    Found 1-bit register for signal <heap_bh6_w98_0_d2>.
    Found 1-bit register for signal <heap_bh6_w97_0_d1>.
    Found 1-bit register for signal <heap_bh6_w97_0_d2>.
    Found 1-bit register for signal <heap_bh6_w96_0_d1>.
    Found 1-bit register for signal <heap_bh6_w96_0_d2>.
    Found 1-bit register for signal <heap_bh6_w95_0_d1>.
    Found 1-bit register for signal <heap_bh6_w95_0_d2>.
    Found 1-bit register for signal <heap_bh6_w94_0_d1>.
    Found 1-bit register for signal <heap_bh6_w94_0_d2>.
    Found 1-bit register for signal <heap_bh6_w93_0_d1>.
    Found 1-bit register for signal <heap_bh6_w93_0_d2>.
    Found 1-bit register for signal <heap_bh6_w92_0_d1>.
    Found 1-bit register for signal <heap_bh6_w92_0_d2>.
    Found 1-bit register for signal <heap_bh6_w91_0_d1>.
    Found 1-bit register for signal <heap_bh6_w91_0_d2>.
    Found 1-bit register for signal <heap_bh6_w90_0_d1>.
    Found 1-bit register for signal <heap_bh6_w90_0_d2>.
    Found 1-bit register for signal <heap_bh6_w89_0_d1>.
    Found 1-bit register for signal <heap_bh6_w89_0_d2>.
    Found 1-bit register for signal <heap_bh6_w88_0_d1>.
    Found 1-bit register for signal <heap_bh6_w87_0_d1>.
    Found 1-bit register for signal <heap_bh6_w86_0_d1>.
    Found 1-bit register for signal <heap_bh6_w85_0_d1>.
    Found 1-bit register for signal <heap_bh6_w84_0_d1>.
    Found 1-bit register for signal <heap_bh6_w83_0_d1>.
    Found 1-bit register for signal <heap_bh6_w82_0_d1>.
    Found 1-bit register for signal <heap_bh6_w81_0_d1>.
    Found 1-bit register for signal <heap_bh6_w80_0_d1>.
    Found 1-bit register for signal <heap_bh6_w79_0_d1>.
    Found 1-bit register for signal <heap_bh6_w78_0_d1>.
    Found 1-bit register for signal <heap_bh6_w77_0_d1>.
    Found 1-bit register for signal <heap_bh6_w76_0_d1>.
    Found 1-bit register for signal <heap_bh6_w75_0_d1>.
    Found 1-bit register for signal <heap_bh6_w74_0_d1>.
    Found 1-bit register for signal <heap_bh6_w73_0_d1>.
    Found 1-bit register for signal <heap_bh6_w72_0_d1>.
    Found 1-bit register for signal <heap_bh6_w71_0_d1>.
    Found 1-bit register for signal <heap_bh6_w70_0_d1>.
    Found 1-bit register for signal <heap_bh6_w69_0_d1>.
    Found 1-bit register for signal <heap_bh6_w68_0_d1>.
    Found 1-bit register for signal <heap_bh6_w67_0_d1>.
    Found 1-bit register for signal <heap_bh6_w66_0_d1>.
    Found 1-bit register for signal <heap_bh6_w65_0_d1>.
    Found 1-bit register for signal <heap_bh6_w81_1_d1>.
    Found 1-bit register for signal <heap_bh6_w80_1_d1>.
    Found 1-bit register for signal <heap_bh6_w79_1_d1>.
    Found 1-bit register for signal <heap_bh6_w78_1_d1>.
    Found 1-bit register for signal <heap_bh6_w77_1_d1>.
    Found 1-bit register for signal <heap_bh6_w76_1_d1>.
    Found 1-bit register for signal <heap_bh6_w75_1_d1>.
    Found 1-bit register for signal <heap_bh6_w74_1_d1>.
    Found 1-bit register for signal <heap_bh6_w73_1_d1>.
    Found 1-bit register for signal <heap_bh6_w72_1_d1>.
    Found 1-bit register for signal <heap_bh6_w71_1_d1>.
    Found 1-bit register for signal <heap_bh6_w70_1_d1>.
    Found 1-bit register for signal <heap_bh6_w69_1_d1>.
    Found 1-bit register for signal <heap_bh6_w68_1_d1>.
    Found 1-bit register for signal <heap_bh6_w67_1_d1>.
    Found 1-bit register for signal <heap_bh6_w66_1_d1>.
    Found 1-bit register for signal <heap_bh6_w65_1_d1>.
    Found 1-bit register for signal <heap_bh6_w64_0_d1>.
    Found 1-bit register for signal <heap_bh6_w63_0_d1>.
    Found 1-bit register for signal <heap_bh6_w62_0_d1>.
    Found 1-bit register for signal <heap_bh6_w61_0_d1>.
    Found 1-bit register for signal <heap_bh6_w60_0_d1>.
    Found 1-bit register for signal <heap_bh6_w59_0_d1>.
    Found 1-bit register for signal <heap_bh6_w58_0_d1>.
    Found 1-bit register for signal <heap_bh6_w57_0_d1>.
    Found 1-bit register for signal <heap_bh6_w56_0_d1>.
    Found 1-bit register for signal <heap_bh6_w55_0_d1>.
    Found 1-bit register for signal <heap_bh6_w54_0_d1>.
    Found 1-bit register for signal <heap_bh6_w53_0_d1>.
    Found 1-bit register for signal <heap_bh6_w52_0_d1>.
    Found 1-bit register for signal <heap_bh6_w51_0_d1>.
    Found 1-bit register for signal <heap_bh6_w50_0_d1>.
    Found 1-bit register for signal <heap_bh6_w49_0_d1>.
    Found 1-bit register for signal <heap_bh6_w48_0_d1>.
    Found 1-bit register for signal <heap_bh6_w47_0_d1>.
    Found 1-bit register for signal <heap_bh6_w46_0_d1>.
    Found 1-bit register for signal <heap_bh6_w45_0_d1>.
    Found 1-bit register for signal <heap_bh6_w44_0_d1>.
    Found 1-bit register for signal <heap_bh6_w43_0_d1>.
    Found 1-bit register for signal <heap_bh6_w42_0_d1>.
    Found 1-bit register for signal <heap_bh6_w41_0_d1>.
    Found 1-bit register for signal <heap_bh6_w57_1_d1>.
    Found 1-bit register for signal <heap_bh6_w56_1_d1>.
    Found 1-bit register for signal <heap_bh6_w55_1_d1>.
    Found 1-bit register for signal <heap_bh6_w54_1_d1>.
    Found 1-bit register for signal <heap_bh6_w53_1_d1>.
    Found 1-bit register for signal <heap_bh6_w52_1_d1>.
    Found 1-bit register for signal <heap_bh6_w51_1_d1>.
    Found 1-bit register for signal <heap_bh6_w50_1_d1>.
    Found 1-bit register for signal <heap_bh6_w49_1_d1>.
    Found 1-bit register for signal <heap_bh6_w48_1_d1>.
    Found 1-bit register for signal <heap_bh6_w47_1_d1>.
    Found 1-bit register for signal <heap_bh6_w46_1_d1>.
    Found 1-bit register for signal <heap_bh6_w45_1_d1>.
    Found 1-bit register for signal <heap_bh6_w44_1_d1>.
    Found 1-bit register for signal <heap_bh6_w43_1_d1>.
    Found 1-bit register for signal <heap_bh6_w42_1_d1>.
    Found 1-bit register for signal <heap_bh6_w41_1_d1>.
    Found 1-bit register for signal <heap_bh6_w40_0_d1>.
    Found 1-bit register for signal <heap_bh6_w39_0_d1>.
    Found 1-bit register for signal <heap_bh6_w38_0_d1>.
    Found 1-bit register for signal <heap_bh6_w37_0_d1>.
    Found 1-bit register for signal <heap_bh6_w36_0_d1>.
    Found 1-bit register for signal <heap_bh6_w35_0_d1>.
    Found 1-bit register for signal <heap_bh6_w34_0_d1>.
    Found 1-bit register for signal <heap_bh6_w33_0_d1>.
    Found 1-bit register for signal <heap_bh6_w32_0_d1>.
    Found 1-bit register for signal <heap_bh6_w31_0_d1>.
    Found 1-bit register for signal <heap_bh6_w30_0_d1>.
    Found 1-bit register for signal <heap_bh6_w29_0_d1>.
    Found 1-bit register for signal <heap_bh6_w28_0_d1>.
    Found 1-bit register for signal <heap_bh6_w27_0_d1>.
    Found 1-bit register for signal <heap_bh6_w26_0_d1>.
    Found 1-bit register for signal <heap_bh6_w25_0_d1>.
    Found 1-bit register for signal <heap_bh6_w24_0_d1>.
    Found 1-bit register for signal <heap_bh6_w23_0_d1>.
    Found 1-bit register for signal <heap_bh6_w22_0_d1>.
    Found 1-bit register for signal <heap_bh6_w21_0_d1>.
    Found 1-bit register for signal <heap_bh6_w20_0_d1>.
    Found 1-bit register for signal <heap_bh6_w19_0_d1>.
    Found 1-bit register for signal <heap_bh6_w18_0_d1>.
    Found 1-bit register for signal <heap_bh6_w17_0_d1>.
    Found 1-bit register for signal <heap_bh6_w88_1_d1>.
    Found 1-bit register for signal <heap_bh6_w87_1_d1>.
    Found 1-bit register for signal <heap_bh6_w86_1_d1>.
    Found 1-bit register for signal <heap_bh6_w85_1_d1>.
    Found 1-bit register for signal <heap_bh6_w84_1_d1>.
    Found 1-bit register for signal <heap_bh6_w83_1_d1>.
    Found 1-bit register for signal <heap_bh6_w82_1_d1>.
    Found 1-bit register for signal <heap_bh6_w81_2_d1>.
    Found 1-bit register for signal <heap_bh6_w80_2_d1>.
    Found 1-bit register for signal <heap_bh6_w79_2_d1>.
    Found 1-bit register for signal <heap_bh6_w78_2_d1>.
    Found 1-bit register for signal <heap_bh6_w77_2_d1>.
    Found 1-bit register for signal <heap_bh6_w76_2_d1>.
    Found 1-bit register for signal <heap_bh6_w75_2_d1>.
    Found 1-bit register for signal <heap_bh6_w74_2_d1>.
    Found 1-bit register for signal <heap_bh6_w73_2_d1>.
    Found 1-bit register for signal <heap_bh6_w72_2_d1>.
    Found 1-bit register for signal <heap_bh6_w71_2_d1>.
    Found 1-bit register for signal <heap_bh6_w70_2_d1>.
    Found 1-bit register for signal <heap_bh6_w69_2_d1>.
    Found 1-bit register for signal <heap_bh6_w68_2_d1>.
    Found 1-bit register for signal <heap_bh6_w67_2_d1>.
    Found 1-bit register for signal <heap_bh6_w66_2_d1>.
    Found 1-bit register for signal <heap_bh6_w65_2_d1>.
    Found 1-bit register for signal <heap_bh6_w64_1_d1>.
    Found 1-bit register for signal <heap_bh6_w63_1_d1>.
    Found 1-bit register for signal <heap_bh6_w62_1_d1>.
    Found 1-bit register for signal <heap_bh6_w61_1_d1>.
    Found 1-bit register for signal <heap_bh6_w60_1_d1>.
    Found 1-bit register for signal <heap_bh6_w59_1_d1>.
    Found 1-bit register for signal <heap_bh6_w58_1_d1>.
    Found 1-bit register for signal <heap_bh6_w57_2_d1>.
    Found 1-bit register for signal <heap_bh6_w56_2_d1>.
    Found 1-bit register for signal <heap_bh6_w55_2_d1>.
    Found 1-bit register for signal <heap_bh6_w54_2_d1>.
    Found 1-bit register for signal <heap_bh6_w53_2_d1>.
    Found 1-bit register for signal <heap_bh6_w52_2_d1>.
    Found 1-bit register for signal <heap_bh6_w51_2_d1>.
    Found 1-bit register for signal <heap_bh6_w50_2_d1>.
    Found 1-bit register for signal <heap_bh6_w49_2_d1>.
    Found 1-bit register for signal <heap_bh6_w48_2_d1>.
    Found 1-bit register for signal <heap_bh6_w64_2_d1>.
    Found 1-bit register for signal <heap_bh6_w63_2_d1>.
    Found 1-bit register for signal <heap_bh6_w62_2_d1>.
    Found 1-bit register for signal <heap_bh6_w61_2_d1>.
    Found 1-bit register for signal <heap_bh6_w60_2_d1>.
    Found 1-bit register for signal <heap_bh6_w59_2_d1>.
    Found 1-bit register for signal <heap_bh6_w58_2_d1>.
    Found 1-bit register for signal <heap_bh6_w57_3_d1>.
    Found 1-bit register for signal <heap_bh6_w56_3_d1>.
    Found 1-bit register for signal <heap_bh6_w55_3_d1>.
    Found 1-bit register for signal <heap_bh6_w54_3_d1>.
    Found 1-bit register for signal <heap_bh6_w53_3_d1>.
    Found 1-bit register for signal <heap_bh6_w52_3_d1>.
    Found 1-bit register for signal <heap_bh6_w51_3_d1>.
    Found 1-bit register for signal <heap_bh6_w50_3_d1>.
    Found 1-bit register for signal <heap_bh6_w49_3_d1>.
    Found 1-bit register for signal <heap_bh6_w48_3_d1>.
    Found 1-bit register for signal <heap_bh6_w47_2_d1>.
    Found 1-bit register for signal <heap_bh6_w46_2_d1>.
    Found 1-bit register for signal <heap_bh6_w45_2_d1>.
    Found 1-bit register for signal <heap_bh6_w44_2_d1>.
    Found 1-bit register for signal <heap_bh6_w43_2_d1>.
    Found 1-bit register for signal <heap_bh6_w42_2_d1>.
    Found 1-bit register for signal <heap_bh6_w41_2_d1>.
    Found 1-bit register for signal <heap_bh6_w40_1_d1>.
    Found 1-bit register for signal <heap_bh6_w39_1_d1>.
    Found 1-bit register for signal <heap_bh6_w38_1_d1>.
    Found 1-bit register for signal <heap_bh6_w37_1_d1>.
    Found 1-bit register for signal <heap_bh6_w36_1_d1>.
    Found 1-bit register for signal <heap_bh6_w35_1_d1>.
    Found 1-bit register for signal <heap_bh6_w34_1_d1>.
    Found 1-bit register for signal <heap_bh6_w33_1_d1>.
    Found 1-bit register for signal <heap_bh6_w32_1_d1>.
    Found 1-bit register for signal <heap_bh6_w31_1_d1>.
    Found 1-bit register for signal <heap_bh6_w30_1_d1>.
    Found 1-bit register for signal <heap_bh6_w29_1_d1>.
    Found 1-bit register for signal <heap_bh6_w28_1_d1>.
    Found 1-bit register for signal <heap_bh6_w27_1_d1>.
    Found 1-bit register for signal <heap_bh6_w26_1_d1>.
    Found 1-bit register for signal <heap_bh6_w25_1_d1>.
    Found 1-bit register for signal <heap_bh6_w24_1_d1>.
    Found 1-bit register for signal <heap_bh6_w40_2_d1>.
    Found 1-bit register for signal <heap_bh6_w39_2_d1>.
    Found 1-bit register for signal <heap_bh6_w38_2_d1>.
    Found 1-bit register for signal <heap_bh6_w37_2_d1>.
    Found 1-bit register for signal <heap_bh6_w36_2_d1>.
    Found 1-bit register for signal <heap_bh6_w35_2_d1>.
    Found 1-bit register for signal <heap_bh6_w34_2_d1>.
    Found 1-bit register for signal <heap_bh6_w33_2_d1>.
    Found 1-bit register for signal <heap_bh6_w32_2_d1>.
    Found 1-bit register for signal <heap_bh6_w31_2_d1>.
    Found 1-bit register for signal <heap_bh6_w30_2_d1>.
    Found 1-bit register for signal <heap_bh6_w29_2_d1>.
    Found 1-bit register for signal <heap_bh6_w28_2_d1>.
    Found 1-bit register for signal <heap_bh6_w27_2_d1>.
    Found 1-bit register for signal <heap_bh6_w26_2_d1>.
    Found 1-bit register for signal <heap_bh6_w25_2_d1>.
    Found 1-bit register for signal <heap_bh6_w24_2_d1>.
    Found 1-bit register for signal <heap_bh6_w23_1_d1>.
    Found 1-bit register for signal <heap_bh6_w22_1_d1>.
    Found 1-bit register for signal <heap_bh6_w21_1_d1>.
    Found 1-bit register for signal <heap_bh6_w20_1_d1>.
    Found 1-bit register for signal <heap_bh6_w19_1_d1>.
    Found 1-bit register for signal <heap_bh6_w18_1_d1>.
    Found 1-bit register for signal <heap_bh6_w17_1_d1>.
    Found 1-bit register for signal <heap_bh6_w16_0_d1>.
    Found 1-bit register for signal <heap_bh6_w15_0_d1>.
    Found 1-bit register for signal <heap_bh6_w14_0_d1>.
    Found 1-bit register for signal <heap_bh6_w13_0_d1>.
    Found 1-bit register for signal <heap_bh6_w12_0_d1>.
    Found 1-bit register for signal <heap_bh6_w11_0_d1>.
    Found 1-bit register for signal <heap_bh6_w10_0_d1>.
    Found 1-bit register for signal <heap_bh6_w9_0_d1>.
    Found 1-bit register for signal <heap_bh6_w8_0_d1>.
    Found 1-bit register for signal <heap_bh6_w7_0_d1>.
    Found 1-bit register for signal <heap_bh6_w6_0_d1>.
    Found 1-bit register for signal <heap_bh6_w5_0_d1>.
    Found 1-bit register for signal <heap_bh6_w4_0_d1>.
    Found 1-bit register for signal <heap_bh6_w3_0_d1>.
    Found 1-bit register for signal <heap_bh6_w2_0_d1>.
    Found 1-bit register for signal <heap_bh6_w1_0_d1>.
    Found 1-bit register for signal <heap_bh6_w0_0_d1>.
    Found 1-bit register for signal <heap_bh6_w71_3_d1>.
    Found 1-bit register for signal <heap_bh6_w70_3_d1>.
    Found 1-bit register for signal <heap_bh6_w69_3_d1>.
    Found 1-bit register for signal <heap_bh6_w68_3_d1>.
    Found 1-bit register for signal <heap_bh6_w67_3_d1>.
    Found 1-bit register for signal <heap_bh6_w66_3_d1>.
    Found 1-bit register for signal <heap_bh6_w65_3_d1>.
    Found 1-bit register for signal <heap_bh6_w64_3_d1>.
    Found 1-bit register for signal <heap_bh6_w63_3_d1>.
    Found 1-bit register for signal <heap_bh6_w62_3_d1>.
    Found 1-bit register for signal <heap_bh6_w61_3_d1>.
    Found 1-bit register for signal <heap_bh6_w60_3_d1>.
    Found 1-bit register for signal <heap_bh6_w59_3_d1>.
    Found 1-bit register for signal <heap_bh6_w58_3_d1>.
    Found 1-bit register for signal <heap_bh6_w57_4_d1>.
    Found 1-bit register for signal <heap_bh6_w56_4_d1>.
    Found 1-bit register for signal <heap_bh6_w55_4_d1>.
    Found 1-bit register for signal <heap_bh6_w54_4_d1>.
    Found 1-bit register for signal <heap_bh6_w53_4_d1>.
    Found 1-bit register for signal <heap_bh6_w52_4_d1>.
    Found 1-bit register for signal <heap_bh6_w51_4_d1>.
    Found 1-bit register for signal <heap_bh6_w50_4_d1>.
    Found 1-bit register for signal <heap_bh6_w49_4_d1>.
    Found 1-bit register for signal <heap_bh6_w48_4_d1>.
    Found 1-bit register for signal <heap_bh6_w47_3_d1>.
    Found 1-bit register for signal <heap_bh6_w46_3_d1>.
    Found 1-bit register for signal <heap_bh6_w45_3_d1>.
    Found 1-bit register for signal <heap_bh6_w44_3_d1>.
    Found 1-bit register for signal <heap_bh6_w43_3_d1>.
    Found 1-bit register for signal <heap_bh6_w42_3_d1>.
    Found 1-bit register for signal <heap_bh6_w41_3_d1>.
    Found 1-bit register for signal <heap_bh6_w40_3_d1>.
    Found 1-bit register for signal <heap_bh6_w39_3_d1>.
    Found 1-bit register for signal <heap_bh6_w38_3_d1>.
    Found 1-bit register for signal <heap_bh6_w37_3_d1>.
    Found 1-bit register for signal <heap_bh6_w36_3_d1>.
    Found 1-bit register for signal <heap_bh6_w35_3_d1>.
    Found 1-bit register for signal <heap_bh6_w34_3_d1>.
    Found 1-bit register for signal <heap_bh6_w33_3_d1>.
    Found 1-bit register for signal <heap_bh6_w32_3_d1>.
    Found 1-bit register for signal <heap_bh6_w31_3_d1>.
    Found 1-bit register for signal <heap_bh6_w47_4_d1>.
    Found 1-bit register for signal <heap_bh6_w46_4_d1>.
    Found 1-bit register for signal <heap_bh6_w45_4_d1>.
    Found 1-bit register for signal <heap_bh6_w44_4_d1>.
    Found 1-bit register for signal <heap_bh6_w43_4_d1>.
    Found 1-bit register for signal <heap_bh6_w42_4_d1>.
    Found 1-bit register for signal <heap_bh6_w41_4_d1>.
    Found 1-bit register for signal <heap_bh6_w40_4_d1>.
    Found 1-bit register for signal <heap_bh6_w39_4_d1>.
    Found 1-bit register for signal <heap_bh6_w38_4_d1>.
    Found 1-bit register for signal <heap_bh6_w37_4_d1>.
    Found 1-bit register for signal <heap_bh6_w36_4_d1>.
    Found 1-bit register for signal <heap_bh6_w35_4_d1>.
    Found 1-bit register for signal <heap_bh6_w34_4_d1>.
    Found 1-bit register for signal <heap_bh6_w33_4_d1>.
    Found 1-bit register for signal <heap_bh6_w32_4_d1>.
    Found 1-bit register for signal <heap_bh6_w31_4_d1>.
    Found 1-bit register for signal <heap_bh6_w30_3_d1>.
    Found 1-bit register for signal <heap_bh6_w29_3_d1>.
    Found 1-bit register for signal <heap_bh6_w28_3_d1>.
    Found 1-bit register for signal <heap_bh6_w27_3_d1>.
    Found 1-bit register for signal <heap_bh6_w26_3_d1>.
    Found 1-bit register for signal <heap_bh6_w25_3_d1>.
    Found 1-bit register for signal <heap_bh6_w24_3_d1>.
    Found 1-bit register for signal <heap_bh6_w23_2_d1>.
    Found 1-bit register for signal <heap_bh6_w22_2_d1>.
    Found 1-bit register for signal <heap_bh6_w21_2_d1>.
    Found 1-bit register for signal <heap_bh6_w20_2_d1>.
    Found 1-bit register for signal <heap_bh6_w19_2_d1>.
    Found 1-bit register for signal <heap_bh6_w18_2_d1>.
    Found 1-bit register for signal <heap_bh6_w17_2_d1>.
    Found 1-bit register for signal <heap_bh6_w16_1_d1>.
    Found 1-bit register for signal <heap_bh6_w15_1_d1>.
    Found 1-bit register for signal <heap_bh6_w14_1_d1>.
    Found 1-bit register for signal <heap_bh6_w13_1_d1>.
    Found 1-bit register for signal <heap_bh6_w12_1_d1>.
    Found 1-bit register for signal <heap_bh6_w11_1_d1>.
    Found 1-bit register for signal <heap_bh6_w10_1_d1>.
    Found 1-bit register for signal <heap_bh6_w9_1_d1>.
    Found 1-bit register for signal <heap_bh6_w8_1_d1>.
    Found 1-bit register for signal <heap_bh6_w7_1_d1>.
    Found 1-bit register for signal <heap_bh6_w23_3_d1>.
    Found 1-bit register for signal <heap_bh6_w22_3_d1>.
    Found 1-bit register for signal <heap_bh6_w21_3_d1>.
    Found 1-bit register for signal <heap_bh6_w20_3_d1>.
    Found 1-bit register for signal <heap_bh6_w19_3_d1>.
    Found 1-bit register for signal <heap_bh6_w18_3_d1>.
    Found 1-bit register for signal <heap_bh6_w17_3_d1>.
    Found 1-bit register for signal <heap_bh6_w16_2_d1>.
    Found 1-bit register for signal <heap_bh6_w15_2_d1>.
    Found 1-bit register for signal <heap_bh6_w14_2_d1>.
    Found 1-bit register for signal <heap_bh6_w13_2_d1>.
    Found 1-bit register for signal <heap_bh6_w12_2_d1>.
    Found 1-bit register for signal <heap_bh6_w11_2_d1>.
    Found 1-bit register for signal <heap_bh6_w10_2_d1>.
    Found 1-bit register for signal <heap_bh6_w9_2_d1>.
    Found 1-bit register for signal <heap_bh6_w8_2_d1>.
    Found 1-bit register for signal <heap_bh6_w7_2_d1>.
    Found 1-bit register for signal <heap_bh6_w6_1_d1>.
    Found 1-bit register for signal <heap_bh6_w5_1_d1>.
    Found 1-bit register for signal <heap_bh6_w4_1_d1>.
    Found 1-bit register for signal <heap_bh6_w3_1_d1>.
    Found 1-bit register for signal <heap_bh6_w2_1_d1>.
    Found 1-bit register for signal <heap_bh6_w1_1_d1>.
    Found 1-bit register for signal <heap_bh6_w0_1_d1>.
    Found 1-bit register for signal <heap_bh6_w54_5_d1>.
    Found 1-bit register for signal <heap_bh6_w53_5_d1>.
    Found 1-bit register for signal <heap_bh6_w52_5_d1>.
    Found 1-bit register for signal <heap_bh6_w51_5_d1>.
    Found 1-bit register for signal <heap_bh6_w50_5_d1>.
    Found 1-bit register for signal <heap_bh6_w49_5_d1>.
    Found 1-bit register for signal <heap_bh6_w48_5_d1>.
    Found 1-bit register for signal <heap_bh6_w47_5_d1>.
    Found 1-bit register for signal <heap_bh6_w46_5_d1>.
    Found 1-bit register for signal <heap_bh6_w45_5_d1>.
    Found 1-bit register for signal <heap_bh6_w44_5_d1>.
    Found 1-bit register for signal <heap_bh6_w43_5_d1>.
    Found 1-bit register for signal <heap_bh6_w42_5_d1>.
    Found 1-bit register for signal <heap_bh6_w41_5_d1>.
    Found 1-bit register for signal <heap_bh6_w40_5_d1>.
    Found 1-bit register for signal <heap_bh6_w39_5_d1>.
    Found 1-bit register for signal <heap_bh6_w38_5_d1>.
    Found 1-bit register for signal <heap_bh6_w37_5_d1>.
    Found 1-bit register for signal <heap_bh6_w36_5_d1>.
    Found 1-bit register for signal <heap_bh6_w35_5_d1>.
    Found 1-bit register for signal <heap_bh6_w34_5_d1>.
    Found 1-bit register for signal <heap_bh6_w33_5_d1>.
    Found 1-bit register for signal <heap_bh6_w32_5_d1>.
    Found 1-bit register for signal <heap_bh6_w31_5_d1>.
    Found 1-bit register for signal <heap_bh6_w30_4_d1>.
    Found 1-bit register for signal <heap_bh6_w29_4_d1>.
    Found 1-bit register for signal <heap_bh6_w28_4_d1>.
    Found 1-bit register for signal <heap_bh6_w27_4_d1>.
    Found 1-bit register for signal <heap_bh6_w26_4_d1>.
    Found 1-bit register for signal <heap_bh6_w25_4_d1>.
    Found 1-bit register for signal <heap_bh6_w24_4_d1>.
    Found 1-bit register for signal <heap_bh6_w23_4_d1>.
    Found 1-bit register for signal <heap_bh6_w22_4_d1>.
    Found 1-bit register for signal <heap_bh6_w21_4_d1>.
    Found 1-bit register for signal <heap_bh6_w20_4_d1>.
    Found 1-bit register for signal <heap_bh6_w19_4_d1>.
    Found 1-bit register for signal <heap_bh6_w18_4_d1>.
    Found 1-bit register for signal <heap_bh6_w17_4_d1>.
    Found 1-bit register for signal <heap_bh6_w16_3_d1>.
    Found 1-bit register for signal <heap_bh6_w15_3_d1>.
    Found 1-bit register for signal <heap_bh6_w14_3_d1>.
    Found 1-bit register for signal <heap_bh6_w30_5_d1>.
    Found 1-bit register for signal <heap_bh6_w29_5_d1>.
    Found 1-bit register for signal <heap_bh6_w28_5_d1>.
    Found 1-bit register for signal <heap_bh6_w27_5_d1>.
    Found 1-bit register for signal <heap_bh6_w26_5_d1>.
    Found 1-bit register for signal <heap_bh6_w25_5_d1>.
    Found 1-bit register for signal <heap_bh6_w24_5_d1>.
    Found 1-bit register for signal <heap_bh6_w23_5_d1>.
    Found 1-bit register for signal <heap_bh6_w22_5_d1>.
    Found 1-bit register for signal <heap_bh6_w21_5_d1>.
    Found 1-bit register for signal <heap_bh6_w20_5_d1>.
    Found 1-bit register for signal <heap_bh6_w19_5_d1>.
    Found 1-bit register for signal <heap_bh6_w18_5_d1>.
    Found 1-bit register for signal <heap_bh6_w17_5_d1>.
    Found 1-bit register for signal <heap_bh6_w16_4_d1>.
    Found 1-bit register for signal <heap_bh6_w15_4_d1>.
    Found 1-bit register for signal <heap_bh6_w14_4_d1>.
    Found 1-bit register for signal <heap_bh6_w13_3_d1>.
    Found 1-bit register for signal <heap_bh6_w12_3_d1>.
    Found 1-bit register for signal <heap_bh6_w11_3_d1>.
    Found 1-bit register for signal <heap_bh6_w10_3_d1>.
    Found 1-bit register for signal <heap_bh6_w9_3_d1>.
    Found 1-bit register for signal <heap_bh6_w8_3_d1>.
    Found 1-bit register for signal <heap_bh6_w7_3_d1>.
    Found 1-bit register for signal <heap_bh6_w6_2_d1>.
    Found 1-bit register for signal <heap_bh6_w5_2_d1>.
    Found 1-bit register for signal <heap_bh6_w4_2_d1>.
    Found 1-bit register for signal <heap_bh6_w3_2_d1>.
    Found 1-bit register for signal <heap_bh6_w2_2_d1>.
    Found 1-bit register for signal <heap_bh6_w1_2_d1>.
    Found 1-bit register for signal <heap_bh6_w0_2_d1>.
    Found 1-bit register for signal <heap_bh6_w6_3_d1>.
    Found 1-bit register for signal <heap_bh6_w5_3_d1>.
    Found 1-bit register for signal <heap_bh6_w4_3_d1>.
    Found 1-bit register for signal <heap_bh6_w3_3_d1>.
    Found 1-bit register for signal <heap_bh6_w2_3_d1>.
    Found 1-bit register for signal <heap_bh6_w1_3_d1>.
    Found 1-bit register for signal <heap_bh6_w0_3_d1>.
    Found 1-bit register for signal <heap_bh6_w6_4_d1>.
    Found 1-bit register for signal <heap_bh6_w9_4_d1>.
    Found 1-bit register for signal <heap_bh6_w12_4_d1>.
    Found 1-bit register for signal <heap_bh6_w15_5_d1>.
    Found 1-bit register for signal <heap_bh6_w17_6_d1>.
    Found 1-bit register for signal <heap_bh6_w19_6_d1>.
    Found 1-bit register for signal <heap_bh6_w21_6_d1>.
    Found 1-bit register for signal <heap_bh6_w23_6_d1>.
    Found 1-bit register for signal <heap_bh6_w25_6_d1>.
    Found 1-bit register for signal <heap_bh6_w27_6_d1>.
    Found 1-bit register for signal <heap_bh6_w29_6_d1>.
    Found 1-bit register for signal <heap_bh6_w31_6_d1>.
    Found 1-bit register for signal <heap_bh6_w33_6_d1>.
    Found 1-bit register for signal <heap_bh6_w35_6_d1>.
    Found 1-bit register for signal <heap_bh6_w37_6_d1>.
    Found 1-bit register for signal <heap_bh6_w39_6_d1>.
    Found 1-bit register for signal <heap_bh6_w41_6_d1>.
    Found 1-bit register for signal <heap_bh6_w43_6_d1>.
    Found 1-bit register for signal <heap_bh6_w45_6_d1>.
    Found 1-bit register for signal <heap_bh6_w47_6_d1>.
    Found 1-bit register for signal <heap_bh6_w49_6_d1>.
    Found 1-bit register for signal <heap_bh6_w51_6_d1>.
    Found 1-bit register for signal <heap_bh6_w53_6_d1>.
    Found 1-bit register for signal <heap_bh6_w55_5_d1>.
    Found 1-bit register for signal <heap_bh6_w57_5_d1>.
    Found 1-bit register for signal <heap_bh6_w63_4_d1>.
    Found 1-bit register for signal <heap_bh6_w66_4_d1>.
    Found 1-bit register for signal <heap_bh6_w69_4_d1>.
    Found 1-bit register for signal <heap_bh6_w72_3_d1>.
    Found 1-bit register for signal <tempR_bh6_0_d1>.
    Found 1-bit register for signal <tempR_bh6_0_d2>.
    Found 1-bit register for signal <heap_bh6_w5_6_d1>.
    Found 1-bit register for signal <heap_bh6_w6_6_d1>.
    Found 1-bit register for signal <heap_bh6_w8_6_d1>.
    Found 1-bit register for signal <heap_bh6_w9_6_d1>.
    Found 1-bit register for signal <heap_bh6_w11_6_d1>.
    Found 1-bit register for signal <heap_bh6_w12_6_d1>.
    Found 1-bit register for signal <heap_bh6_w14_8_d1>.
    Found 1-bit register for signal <heap_bh6_w15_8_d1>.
    Found 1-bit register for signal <heap_bh6_w16_8_d1>.
    Found 1-bit register for signal <heap_bh6_w16_9_d1>.
    Found 1-bit register for signal <heap_bh6_w17_9_d1>.
    Found 1-bit register for signal <heap_bh6_w18_9_d1>.
    Found 1-bit register for signal <heap_bh6_w18_10_d1>.
    Found 1-bit register for signal <heap_bh6_w19_9_d1>.
    Found 1-bit register for signal <heap_bh6_w20_9_d1>.
    Found 1-bit register for signal <heap_bh6_w20_10_d1>.
    Found 1-bit register for signal <heap_bh6_w21_9_d1>.
    Found 1-bit register for signal <heap_bh6_w22_9_d1>.
    Found 1-bit register for signal <heap_bh6_w22_10_d1>.
    Found 1-bit register for signal <heap_bh6_w23_9_d1>.
    Found 1-bit register for signal <heap_bh6_w24_9_d1>.
    Found 1-bit register for signal <heap_bh6_w24_10_d1>.
    Found 1-bit register for signal <heap_bh6_w25_9_d1>.
    Found 1-bit register for signal <heap_bh6_w26_9_d1>.
    Found 1-bit register for signal <heap_bh6_w26_10_d1>.
    Found 1-bit register for signal <heap_bh6_w27_9_d1>.
    Found 1-bit register for signal <heap_bh6_w28_9_d1>.
    Found 1-bit register for signal <heap_bh6_w28_10_d1>.
    Found 1-bit register for signal <heap_bh6_w29_9_d1>.
    Found 1-bit register for signal <heap_bh6_w30_9_d1>.
    Found 1-bit register for signal <heap_bh6_w30_10_d1>.
    Found 1-bit register for signal <heap_bh6_w31_9_d1>.
    Found 1-bit register for signal <heap_bh6_w32_9_d1>.
    Found 1-bit register for signal <heap_bh6_w32_10_d1>.
    Found 1-bit register for signal <heap_bh6_w33_9_d1>.
    Found 1-bit register for signal <heap_bh6_w34_9_d1>.
    Found 1-bit register for signal <heap_bh6_w34_10_d1>.
    Found 1-bit register for signal <heap_bh6_w35_9_d1>.
    Found 1-bit register for signal <heap_bh6_w36_9_d1>.
    Found 1-bit register for signal <heap_bh6_w36_10_d1>.
    Found 1-bit register for signal <heap_bh6_w37_9_d1>.
    Found 1-bit register for signal <heap_bh6_w38_9_d1>.
    Found 1-bit register for signal <heap_bh6_w38_10_d1>.
    Found 1-bit register for signal <heap_bh6_w39_9_d1>.
    Found 1-bit register for signal <heap_bh6_w40_9_d1>.
    Found 1-bit register for signal <heap_bh6_w40_10_d1>.
    Found 1-bit register for signal <heap_bh6_w41_9_d1>.
    Found 1-bit register for signal <heap_bh6_w42_9_d1>.
    Found 1-bit register for signal <heap_bh6_w42_10_d1>.
    Found 1-bit register for signal <heap_bh6_w43_9_d1>.
    Found 1-bit register for signal <heap_bh6_w44_9_d1>.
    Found 1-bit register for signal <heap_bh6_w44_10_d1>.
    Found 1-bit register for signal <heap_bh6_w45_9_d1>.
    Found 1-bit register for signal <heap_bh6_w46_9_d1>.
    Found 1-bit register for signal <heap_bh6_w46_10_d1>.
    Found 1-bit register for signal <heap_bh6_w47_9_d1>.
    Found 1-bit register for signal <heap_bh6_w48_9_d1>.
    Found 1-bit register for signal <heap_bh6_w48_10_d1>.
    Found 1-bit register for signal <heap_bh6_w49_9_d1>.
    Found 1-bit register for signal <heap_bh6_w50_9_d1>.
    Found 1-bit register for signal <heap_bh6_w50_10_d1>.
    Found 1-bit register for signal <heap_bh6_w51_9_d1>.
    Found 1-bit register for signal <heap_bh6_w52_9_d1>.
    Found 1-bit register for signal <heap_bh6_w52_10_d1>.
    Found 1-bit register for signal <heap_bh6_w53_9_d1>.
    Found 1-bit register for signal <heap_bh6_w54_9_d1>.
    Found 1-bit register for signal <heap_bh6_w54_10_d1>.
    Found 1-bit register for signal <heap_bh6_w55_8_d1>.
    Found 1-bit register for signal <heap_bh6_w56_8_d1>.
    Found 1-bit register for signal <heap_bh6_w56_9_d1>.
    Found 1-bit register for signal <heap_bh6_w57_8_d1>.
    Found 1-bit register for signal <heap_bh6_w58_7_d1>.
    Found 1-bit register for signal <heap_bh6_w58_8_d1>.
    Found 1-bit register for signal <heap_bh6_w62_6_d1>.
    Found 1-bit register for signal <heap_bh6_w63_6_d1>.
    Found 1-bit register for signal <heap_bh6_w65_6_d1>.
    Found 1-bit register for signal <heap_bh6_w66_6_d1>.
    Found 1-bit register for signal <heap_bh6_w68_6_d1>.
    Found 1-bit register for signal <heap_bh6_w69_6_d1>.
    Found 1-bit register for signal <heap_bh6_w71_6_d1>.
    Found 1-bit register for signal <heap_bh6_w72_5_d1>.
    Found 1-bit register for signal <heap_bh6_w82_3_d1>.
    Found 1-bit register for signal <heap_bh6_w83_2_d1>.
    Found 1-bit register for signal <heap_bh6_w4_7_d1>.
    Found 3-bit register for signal <tempR_bh6_1_d1>.
    Found 3-bit register for signal <tempR_bh6_1_d2>.
    Found 1-bit register for signal <heap_bh6_w4_8_d1>.
    Found 1-bit register for signal <heap_bh6_w5_7_d1>.
    Found 1-bit register for signal <heap_bh6_w7_7_d1>.
    Found 1-bit register for signal <heap_bh6_w8_7_d1>.
    Found 1-bit register for signal <heap_bh6_w10_7_d1>.
    Found 1-bit register for signal <heap_bh6_w11_7_d1>.
    Found 1-bit register for signal <heap_bh6_w13_7_d1>.
    Found 1-bit register for signal <heap_bh6_w14_9_d1>.
    Found 1-bit register for signal <heap_bh6_w59_7_d1>.
    Found 1-bit register for signal <heap_bh6_w60_7_d1>.
    Found 1-bit register for signal <heap_bh6_w60_8_d1>.
    Found 1-bit register for signal <heap_bh6_w61_6_d1>.
    Found 1-bit register for signal <heap_bh6_w62_7_d1>.
    Found 1-bit register for signal <heap_bh6_w64_7_d1>.
    Found 1-bit register for signal <heap_bh6_w65_7_d1>.
    Found 1-bit register for signal <heap_bh6_w67_7_d1>.
    Found 1-bit register for signal <heap_bh6_w68_7_d1>.
    Found 1-bit register for signal <heap_bh6_w70_7_d1>.
    Found 1-bit register for signal <heap_bh6_w71_7_d1>.
    Found 1-bit register for signal <heap_bh6_w73_5_d1>.
    Found 1-bit register for signal <heap_bh6_w74_5_d1>.
    Found 1-bit register for signal <heap_bh6_w75_4_d1>.
    Found 1-bit register for signal <heap_bh6_w76_5_d1>.
    Found 1-bit register for signal <heap_bh6_w77_4_d1>.
    Found 1-bit register for signal <heap_bh6_w78_5_d1>.
    Found 1-bit register for signal <heap_bh6_w79_4_d1>.
    Found 1-bit register for signal <heap_bh6_w80_5_d1>.
    Found 1-bit register for signal <heap_bh6_w81_4_d1>.
    Found 1-bit register for signal <heap_bh6_w82_4_d1>.
    Found 1-bit register for signal <heap_bh6_w84_3_d1>.
    Found 1-bit register for signal <heap_bh6_w85_2_d1>.
    Found 1-bit register for signal <heap_bh6_w86_2_d1>.
    Found 1-bit register for signal <heap_bh6_w87_2_d1>.
    Found 1-bit register for signal <heap_bh6_w88_2_d1>.
    Found 1-bit register for signal <heap_bh6_w89_1_d1>.
    Found 1-bit register for signal <heap_bh6_w105_0_d1>.
    Found 4-bit adder for signal <outAdder_bh6_0> created at line 3775.
    Found 3-bit adder for signal <n2094> created at line 3827.
    Found 3-bit adder for signal <outAdder_bh6_1> created at line 3827.
    Found 10-bit adder for signal <n2100> created at line 3860.
    Found 10-bit adder for signal <outAdder_bh6_2> created at line 3860.
    Found 6-bit adder for signal <n2106> created at line 3876.
    Found 6-bit adder for signal <outAdder_bh6_3> created at line 3876.
    Found 24x17-bit multiplier for signal <DSP_bh6_ch0_0> created at line 2142.
    Found 24x17-bit multiplier for signal <DSP_bh6_ch1_0> created at line 2185.
    Found 24x17-bit multiplier for signal <DSP_bh6_ch2_0> created at line 2228.
    Found 24x17-bit multiplier for signal <DSP_bh6_ch3_0> created at line 2271.
    Found 24x17-bit multiplier for signal <DSP_bh6_ch4_0> created at line 2314.
    Found 24x17-bit multiplier for signal <DSP_bh6_ch5_0> created at line 2357.
    Found 24x17-bit multiplier for signal <DSP_bh6_ch6_0> created at line 2400.
    Found 24x17-bit multiplier for signal <DSP_bh6_ch7_0> created at line 2443.
    Found 24x17-bit multiplier for signal <DSP_bh6_ch8_0> created at line 2486.
    Found 24x17-bit multiplier for signal <DSP_bh6_ch9_0> created at line 2512.
    Found 24x17-bit multiplier for signal <DSP_bh6_ch10_0> created at line 2555.
    Found 24x17-bit multiplier for signal <DSP_bh6_ch11_0> created at line 2588.
    Summary:
	inferred  12 Multiplier(s).
	inferred   7 Adder/Subtractor(s).
	inferred 604 D-type flip-flop(s).
Unit <IntMultiplier_UsingDSP_53_53_106_unsigned_uid4> synthesized.

Synthesizing Unit <Compressor_14_3>.
    Related source file is "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/float_multiply.vhd".
    Found 32x3-bit Read Only RAM for signal <R>
    Summary:
	inferred   1 RAM(s).
Unit <Compressor_14_3> synthesized.

Synthesizing Unit <Compressor_23_3>.
    Related source file is "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/float_multiply.vhd".
    Found 32x3-bit Read Only RAM for signal <R>
    Summary:
	inferred   1 RAM(s).
Unit <Compressor_23_3> synthesized.

Synthesizing Unit <Compressor_15_3>.
    Related source file is "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/float_multiply.vhd".
    Found 64x3-bit Read Only RAM for signal <R>
    Summary:
	inferred   1 RAM(s).
Unit <Compressor_15_3> synthesized.

Synthesizing Unit <Compressor_3_2>.
    Related source file is "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/float_multiply.vhd".
    Found 8x2-bit Read Only RAM for signal <R>
    Summary:
	inferred   1 RAM(s).
Unit <Compressor_3_2> synthesized.

Synthesizing Unit <IntAdder_103_f300_uid125>.
    Related source file is "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/float_multiply.vhd".
WARNING:Xst:647 - Input <rst> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 78-bit register for signal <sum_l0_idx0_d1>.
    Found 1-bit register for signal <c_l0_idx0_d1>.
    Found 26-bit register for signal <s_sum_l0_idx1_d1>.
    Found 26-bit adder for signal <s_sum_l0_idx1> created at line 340.
    Found 26-bit adder for signal <s_sum_l1_idx1> created at line 346.
    Found 79-bit adder for signal <s_sum_l0_idx0> created at line 320.
    Summary:
	inferred   3 Adder/Subtractor(s).
	inferred 105 D-type flip-flop(s).
Unit <IntAdder_103_f300_uid125> synthesized.

Synthesizing Unit <IntAdder_65_f300_uid133>.
    Related source file is "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/float_multiply.vhd".
WARNING:Xst:647 - Input <clk> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <rst> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 65-bit adder for signal <R> created at line 3924.
    Summary:
	inferred   1 Adder/Subtractor(s).
Unit <IntAdder_65_f300_uid133> synthesized.

Synthesizing Unit <data_downsize>.
    Related source file is "/net/user/r1/unix/okhaliq/Desktop/thesis_code/final code/64 bit versions/version_3/src/version_3_64_syn/data_downsize.vhd".
    Found 2-bit register for signal <down_data>.
    Found 66-bit register for signal <data_in>.
    Found 64-bit register for signal <temp_data>.
    Found 64-bit register for signal <temp_d1>.
    Found finite state machine <FSM_2> for signal <down_data>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 6                                              |
    | Inputs             | 2                                              |
    | Outputs            | 4                                              |
    | Clock              | aclk (rising_edge)                             |
    | Reset              | aresetn (negative)                             |
    | Reset type         | asynchronous                                   |
    | Reset State        | idle                                           |
    | Power Up State     | idle                                           |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Summary:
	inferred 194 D-type flip-flop(s).
	inferred   3 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <data_downsize> synthesized.

=========================================================================
HDL Synthesis Report

Macro Statistics
# RAMs                                                 : 110
 16x2-bit single-port Read Only RAM                    : 1
 32x3-bit single-port Read Only RAM                    : 63
 4x2-bit single-port Read Only RAM                     : 1
 64x3-bit single-port Read Only RAM                    : 37
 8x2-bit single-port Read Only RAM                     : 8
# Multipliers                                          : 12
 24x17-bit multiplier                                  : 12
# Adders/Subtractors                                   : 14
 10-bit adder                                          : 2
 13-bit adder                                          : 2
 13-bit subtractor                                     : 1
 26-bit adder                                          : 2
 3-bit adder                                           : 2
 4-bit adder                                           : 1
 6-bit adder                                           : 2
 65-bit adder                                          : 1
 79-bit adder                                          : 1
# Registers                                            : 255
 1-bit register                                        : 212
 10-bit register                                       : 1
 13-bit register                                       : 3
 2-bit register                                        : 8
 26-bit register                                       : 1
 3-bit register                                        : 2
 4-bit register                                        : 1
 41-bit register                                       : 9
 6-bit register                                        : 1
 64-bit register                                       : 10
 65-bit register                                       : 1
 66-bit register                                       : 5
 79-bit register                                       : 1
# Multiplexers                                         : 14
 106-bit 2-to-1 multiplexer                            : 1
 11-bit 2-to-1 multiplexer                             : 1
 2-bit 2-to-1 multiplexer                              : 5
 52-bit 2-to-1 multiplexer                             : 4
 64-bit 2-to-1 multiplexer                             : 3
# FSMs                                                 : 4
# Xors                                                 : 1
 1-bit xor2                                            : 1

=========================================================================

=========================================================================
*                       Advanced HDL Synthesis                          *
=========================================================================

INFO:Xst:2261 - The FF/Latch <sigProdExt_d1> in Unit <i_multiply_64> is equivalent to the following FF/Latch, which will be removed : <expSig_d1_0> 

Synthesizing (advanced) Unit <Compressor_14_3>.
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_R> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 32-word x 3-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <(X1,X0)>       |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <R>             |          |
    -----------------------------------------------------------------------
Unit <Compressor_14_3> synthesized (advanced).

Synthesizing (advanced) Unit <Compressor_15_3>.
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_R> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 64-word x 3-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <(X1,X0)>       |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <R>             |          |
    -----------------------------------------------------------------------
Unit <Compressor_15_3> synthesized (advanced).

Synthesizing (advanced) Unit <Compressor_23_3>.
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_R> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 32-word x 3-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <(X1,X0)>       |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <R>             |          |
    -----------------------------------------------------------------------
Unit <Compressor_23_3> synthesized (advanced).

Synthesizing (advanced) Unit <Compressor_3_2>.
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_R> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 8-word x 2-bit                      |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <X0>            |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <R>             |          |
    -----------------------------------------------------------------------
Unit <Compressor_3_2> synthesized (advanced).

Synthesizing (advanced) Unit <float_multiply>.
	Found pipelined multiplier on signal <SignificandMultiplication/DSP_bh6_ch5_0>:
		- 1 pipeline level(s) found in a register connected to the multiplier macro output.
		Pushing register(s) into the multiplier macro.
	Found pipelined multiplier on signal <SignificandMultiplication/DSP_bh6_ch2_0>:
		- 1 pipeline level(s) found in a register connected to the multiplier macro output.
		Pushing register(s) into the multiplier macro.
	Found pipelined multiplier on signal <SignificandMultiplication/DSP_bh6_ch7_0>:
		- 1 pipeline level(s) found in a register connected to the multiplier macro output.
		Pushing register(s) into the multiplier macro.
	Found pipelined multiplier on signal <SignificandMultiplication/DSP_bh6_ch4_0>:
		- 1 pipeline level(s) found in a register connected to the multiplier macro output.
		Pushing register(s) into the multiplier macro.
	Found pipelined multiplier on signal <SignificandMultiplication/DSP_bh6_ch9_0>:
		- 1 pipeline level(s) found in a register connected to the multiplier macro output.
		Pushing register(s) into the multiplier macro.
	Found pipelined multiplier on signal <SignificandMultiplication/DSP_bh6_ch1_0>:
		- 1 pipeline level(s) found in a register connected to the multiplier macro output.
		Pushing register(s) into the multiplier macro.
	Found pipelined multiplier on signal <SignificandMultiplication/DSP_bh6_ch6_0>:
		- 1 pipeline level(s) found in a register connected to the multiplier macro output.
		Pushing register(s) into the multiplier macro.
	Found pipelined multiplier on signal <SignificandMultiplication/DSP_bh6_ch0_0>:
		- 1 pipeline level(s) found in a register connected to the multiplier macro output.
		Pushing register(s) into the multiplier macro.
	Found pipelined multiplier on signal <SignificandMultiplication/DSP_bh6_ch3_0>:
		- 1 pipeline level(s) found in a register connected to the multiplier macro output.
		Pushing register(s) into the multiplier macro.
INFO:Xst:3231 - The small RAM <Mram_excPostNorm> will be implemented on LUTs in order to maximize performance and save block RAM resources. If you want to force its implementation on block, use option/constraint ram_style.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 4-word x 2-bit                      |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <expSigPostRound<64:63>> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <excPostNorm>   |          |
    -----------------------------------------------------------------------
INFO:Xst:3231 - The small RAM <Mram_exc> will be implemented on LUTs in order to maximize performance and save block RAM resources. If you want to force its implementation on block, use option/constraint ram_style.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 2-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <(X<65:64>,Y<65:64>)> |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <exc>           |          |
    -----------------------------------------------------------------------
INFO:Xst:2385 - HDL ADVISOR - You can improve the performance of the multiplier SignificandMultiplication/Mmult_DSP_bh6_ch5_0 by adding 1 register level(s).
INFO:Xst:2385 - HDL ADVISOR - You can improve the performance of the multiplier SignificandMultiplication/Mmult_DSP_bh6_ch2_0 by adding 1 register level(s).
INFO:Xst:2385 - HDL ADVISOR - You can improve the performance of the multiplier SignificandMultiplication/Mmult_DSP_bh6_ch7_0 by adding 1 register level(s).
INFO:Xst:2385 - HDL ADVISOR - You can improve the performance of the multiplier SignificandMultiplication/Mmult_DSP_bh6_ch4_0 by adding 1 register level(s).
INFO:Xst:2385 - HDL ADVISOR - You can improve the performance of the multiplier SignificandMultiplication/Mmult_DSP_bh6_ch9_0 by adding 1 register level(s).
INFO:Xst:2385 - HDL ADVISOR - You can improve the performance of the multiplier SignificandMultiplication/Mmult_DSP_bh6_ch1_0 by adding 1 register level(s).
INFO:Xst:2385 - HDL ADVISOR - You can improve the performance of the multiplier SignificandMultiplication/Mmult_DSP_bh6_ch6_0 by adding 1 register level(s).
INFO:Xst:2385 - HDL ADVISOR - You can improve the performance of the multiplier SignificandMultiplication/Mmult_DSP_bh6_ch0_0 by adding 1 register level(s).
INFO:Xst:2385 - HDL ADVISOR - You can improve the performance of the multiplier SignificandMultiplication/Mmult_DSP_bh6_ch3_0 by adding 1 register level(s).
Unit <float_multiply> synthesized (advanced).
WARNING:Xst:2677 - Node <SignificandMultiplication/Adder_final6_4/s_sum_l0_idx1_d1_25> of sequential type is unconnected in block <float_multiply>.

=========================================================================
Advanced HDL Synthesis Report

Macro Statistics
# RAMs                                                 : 110
 16x2-bit single-port distributed Read Only RAM        : 1
 32x3-bit single-port distributed Read Only RAM        : 63
 4x2-bit single-port distributed Read Only RAM         : 1
 64x3-bit single-port distributed Read Only RAM        : 37
 8x2-bit single-port distributed Read Only RAM         : 8
# Multipliers                                          : 12
 24x17-bit multiplier                                  : 3
 24x17-bit registered multiplier                       : 9
# Adders/Subtractors                                   : 11
 10-bit adder carry in                                 : 1
 13-bit adder                                          : 2
 13-bit subtractor                                     : 1
 25-bit adder                                          : 1
 26-bit adder                                          : 1
 3-bit adder carry in                                  : 1
 4-bit adder                                           : 1
 6-bit adder carry in                                  : 1
 65-bit adder                                          : 1
 79-bit adder                                          : 1
# Registers                                            : 1432
 Flip-Flops                                            : 1432
# Multiplexers                                         : 141
 1-bit 2-to-1 multiplexer                              : 130
 106-bit 2-to-1 multiplexer                            : 1
 11-bit 2-to-1 multiplexer                             : 1
 2-bit 2-to-1 multiplexer                              : 4
 52-bit 2-to-1 multiplexer                             : 4
 64-bit 2-to-1 multiplexer                             : 1
# FSMs                                                 : 4
# Xors                                                 : 1
 1-bit xor2                                            : 1

=========================================================================

=========================================================================
*                         Low Level Synthesis                           *
=========================================================================
INFO:Xst:2261 - The FF/Latch <sigProdExt_d1> in Unit <float_multiply> is equivalent to the following FF/Latch, which will be removed : <expSig_d1_0> 
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <i_datastall/FSM_0> on signal <stall_data[1:3]> with user encoding.
--------------------
 State  | Encoding
--------------------
 idle   | 000
 pro_a  | 001
 pro_b  | 010
 both   | 011
 noforw | 100
 forw   | 101
--------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <i_extend_1/FSM_1> on signal <ext_data[1:2]> with user encoding.
Optimizing FSM <i_extend_2/FSM_1> on signal <ext_data[1:2]> with user encoding.
--------------------
 State  | Encoding
--------------------
 idle   | 00
 extn   | 01
 noforw | 10
 forw   | 11
--------------------
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <i_downsize/FSM_2> on signal <down_data[1:2]> with user encoding.
--------------------
 State  | Encoding
--------------------
 idle   | 00
 down   | 01
 noforw | 10
 forw   | 11
--------------------
WARNING:Xst:2677 - Node <SignificandMultiplication/Adder_final6_4/s_sum_l0_idx1_d1_24> of sequential type is unconnected in block <float_multiply>.

Optimizing unit <top_level> ...

Optimizing unit <data_stall> ...

Optimizing unit <data_extend> ...

Optimizing unit <float_multiply> ...

Optimizing unit <data_downsize> ...

Mapping all equations...
Building and optimizing final netlist ...
Found area constraint ratio of 100 (+ 5) on block top_level, actual ratio is 1.

Final Macro Processing ...

Processing Unit <top_level> :
	Found 3-bit shift register for signal <i_fifo/G1[4].buffer_right.i_buffer/output>.
	Found 2-bit shift register for signal <i_multiply_64/SignificandMultiplication/tempR_bh6_1_d2_0>.
	Found 3-bit shift register for signal <i_multiply_64/exc_d4_1>.
	Found 3-bit shift register for signal <i_multiply_64/exc_d4_0>.
	Found 3-bit shift register for signal <i_multiply_64/expSum_d3_12>.
	Found 3-bit shift register for signal <i_multiply_64/expSum_d3_11>.
	Found 3-bit shift register for signal <i_multiply_64/expSum_d3_10>.
	Found 3-bit shift register for signal <i_multiply_64/expSum_d3_9>.
	Found 3-bit shift register for signal <i_multiply_64/expSum_d3_8>.
	Found 3-bit shift register for signal <i_multiply_64/expSum_d3_7>.
	Found 3-bit shift register for signal <i_multiply_64/expSum_d3_6>.
	Found 3-bit shift register for signal <i_multiply_64/expSum_d3_5>.
	Found 3-bit shift register for signal <i_multiply_64/expSum_d3_4>.
	Found 3-bit shift register for signal <i_multiply_64/expSum_d3_3>.
	Found 3-bit shift register for signal <i_multiply_64/expSum_d3_2>.
	Found 3-bit shift register for signal <i_multiply_64/expSum_d3_1>.
	Found 3-bit shift register for signal <i_multiply_64/expSum_d3_0>.
	Found 3-bit shift register for signal <i_multiply_64/sign_d4>.
Unit <top_level> processed.

=========================================================================
Final Register Report

Macro Statistics
# Registers                                            : 1220
 Flip-Flops                                            : 1220
# Shift Registers                                      : 18
 2-bit shift register                                  : 1
 3-bit shift register                                  : 17

=========================================================================

=========================================================================
*                           Partition Report                            *
=========================================================================

Partition Implementation Status
-------------------------------

  No Partitions were found in this design.

-------------------------------

=========================================================================
*                            Design Summary                             *
=========================================================================

Top Level Output File Name         : top_level.ngc

Primitive and Black Box Usage:
------------------------------
# BELS                             : 1429
#      GND                         : 1
#      INV                         : 2
#      LUT1                        : 134
#      LUT2                        : 90
#      LUT3                        : 330
#      LUT4                        : 95
#      LUT5                        : 183
#      LUT6                        : 138
#      MUXCY                       : 228
#      MUXF7                       : 1
#      VCC                         : 1
#      XORCY                       : 226
# FlipFlops/Latches                : 1237
#      FD                          : 345
#      FDC                         : 9
#      FDE                         : 883
# Shift Registers                  : 18
#      SRLC16E                     : 18
# Clock Buffers                    : 1
#      BUFGP                       : 1
# IO Buffers                       : 199
#      IBUF                        : 132
#      OBUF                        : 67
# DSPs                             : 12
#      DSP48E1                     : 12

Device utilization summary:
---------------------------

Selected Device : 6vlx240tff1156-1 


Slice Logic Utilization: 
 Number of Slice Registers:            1237  out of  301440     0%  
 Number of Slice LUTs:                  990  out of  150720     0%  
    Number used as Logic:               972  out of  150720     0%  
    Number used as Memory:               18  out of  58400     0%  
       Number used as SRL:               18

Slice Logic Distribution: 
 Number of LUT Flip Flop pairs used:   1505
   Number with an unused Flip Flop:     268  out of   1505    17%  
   Number with an unused LUT:           515  out of   1505    34%  
   Number of fully used LUT-FF pairs:   722  out of   1505    47%  
   Number of unique control sets:        16

IO Utilization: 
 Number of IOs:                         200
 Number of bonded IOBs:                 200  out of    600    33%  

Specific Feature Utilization:
 Number of BUFG/BUFGCTRLs:                1  out of     32     3%  
 Number of DSP48E1s:                     12  out of    768     1%  

---------------------------
Partition Resource Summary:
---------------------------

  No Partitions were found in this design.

---------------------------


=========================================================================
Timing Report

NOTE: THESE TIMING NUMBERS ARE ONLY A SYNTHESIS ESTIMATE.
      FOR ACCURATE TIMING INFORMATION PLEASE REFER TO THE TRACE REPORT
      GENERATED AFTER PLACE-and-ROUTE.

Clock Information:
------------------
-----------------------------------+------------------------+-------+
Clock Signal                       | Clock buffer(FF name)  | Load  |
-----------------------------------+------------------------+-------+
aclk                               | BUFGP                  | 1267  |
-----------------------------------+------------------------+-------+

Asynchronous Control Signals Information:
----------------------------------------
No asynchronous control signals found in this design

Timing Summary:
---------------
Speed Grade: -1

   Minimum period: 3.338ns (Maximum Frequency: 299.580MHz)
   Minimum input arrival time before clock: 1.770ns
   Maximum output required time after clock: 1.607ns
   Maximum combinational path delay: No path found

Timing Details:
---------------
All values displayed in nanoseconds (ns)

=========================================================================
Timing constraint: Default period analysis for Clock 'aclk'
  Clock period: 3.338ns (frequency: 299.581MHz)
  Total number of paths / destination ports: 23712 / 2381
-------------------------------------------------------------------------
Delay:               3.338ns (Levels of Logic = 66)
  Source:            i_multiply_64/sigProdExt_d1 (FF)
  Destination:       i_downsize/data_in_65 (FF)
  Source Clock:      aclk rising
  Destination Clock: aclk rising

  Data Path: i_multiply_64/sigProdExt_d1 to i_downsize/data_in_65
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FD:C->Q               1   0.375   0.581  i_multiply_64/sigProdExt_d1 (i_multiply_64/sigProdExt_d1)
     LUT3:I0->O            1   0.068   0.000  i_multiply_64/RoundingAdder/Madd_R_lut<0> (i_multiply_64/RoundingAdder/Madd_R_lut<0>)
     MUXCY:S->O            1   0.290   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<0> (i_multiply_64/RoundingAdder/Madd_R_cy<0>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<1> (i_multiply_64/RoundingAdder/Madd_R_cy<1>)
     MUXCY:CI->O           1   0.019   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<2> (i_multiply_64/RoundingAdder/Madd_R_cy<2>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<3> (i_multiply_64/RoundingAdder/Madd_R_cy<3>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<4> (i_multiply_64/RoundingAdder/Madd_R_cy<4>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<5> (i_multiply_64/RoundingAdder/Madd_R_cy<5>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<6> (i_multiply_64/RoundingAdder/Madd_R_cy<6>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<7> (i_multiply_64/RoundingAdder/Madd_R_cy<7>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<8> (i_multiply_64/RoundingAdder/Madd_R_cy<8>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<9> (i_multiply_64/RoundingAdder/Madd_R_cy<9>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<10> (i_multiply_64/RoundingAdder/Madd_R_cy<10>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<11> (i_multiply_64/RoundingAdder/Madd_R_cy<11>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<12> (i_multiply_64/RoundingAdder/Madd_R_cy<12>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<13> (i_multiply_64/RoundingAdder/Madd_R_cy<13>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<14> (i_multiply_64/RoundingAdder/Madd_R_cy<14>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<15> (i_multiply_64/RoundingAdder/Madd_R_cy<15>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<16> (i_multiply_64/RoundingAdder/Madd_R_cy<16>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<17> (i_multiply_64/RoundingAdder/Madd_R_cy<17>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<18> (i_multiply_64/RoundingAdder/Madd_R_cy<18>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<19> (i_multiply_64/RoundingAdder/Madd_R_cy<19>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<20> (i_multiply_64/RoundingAdder/Madd_R_cy<20>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<21> (i_multiply_64/RoundingAdder/Madd_R_cy<21>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<22> (i_multiply_64/RoundingAdder/Madd_R_cy<22>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<23> (i_multiply_64/RoundingAdder/Madd_R_cy<23>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<24> (i_multiply_64/RoundingAdder/Madd_R_cy<24>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<25> (i_multiply_64/RoundingAdder/Madd_R_cy<25>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<26> (i_multiply_64/RoundingAdder/Madd_R_cy<26>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<27> (i_multiply_64/RoundingAdder/Madd_R_cy<27>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<28> (i_multiply_64/RoundingAdder/Madd_R_cy<28>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<29> (i_multiply_64/RoundingAdder/Madd_R_cy<29>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<30> (i_multiply_64/RoundingAdder/Madd_R_cy<30>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<31> (i_multiply_64/RoundingAdder/Madd_R_cy<31>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<32> (i_multiply_64/RoundingAdder/Madd_R_cy<32>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<33> (i_multiply_64/RoundingAdder/Madd_R_cy<33>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<34> (i_multiply_64/RoundingAdder/Madd_R_cy<34>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<35> (i_multiply_64/RoundingAdder/Madd_R_cy<35>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<36> (i_multiply_64/RoundingAdder/Madd_R_cy<36>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<37> (i_multiply_64/RoundingAdder/Madd_R_cy<37>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<38> (i_multiply_64/RoundingAdder/Madd_R_cy<38>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<39> (i_multiply_64/RoundingAdder/Madd_R_cy<39>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<40> (i_multiply_64/RoundingAdder/Madd_R_cy<40>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<41> (i_multiply_64/RoundingAdder/Madd_R_cy<41>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<42> (i_multiply_64/RoundingAdder/Madd_R_cy<42>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<43> (i_multiply_64/RoundingAdder/Madd_R_cy<43>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<44> (i_multiply_64/RoundingAdder/Madd_R_cy<44>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<45> (i_multiply_64/RoundingAdder/Madd_R_cy<45>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<46> (i_multiply_64/RoundingAdder/Madd_R_cy<46>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<47> (i_multiply_64/RoundingAdder/Madd_R_cy<47>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<48> (i_multiply_64/RoundingAdder/Madd_R_cy<48>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<49> (i_multiply_64/RoundingAdder/Madd_R_cy<49>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<50> (i_multiply_64/RoundingAdder/Madd_R_cy<50>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<51> (i_multiply_64/RoundingAdder/Madd_R_cy<51>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<52> (i_multiply_64/RoundingAdder/Madd_R_cy<52>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<53> (i_multiply_64/RoundingAdder/Madd_R_cy<53>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<54> (i_multiply_64/RoundingAdder/Madd_R_cy<54>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<55> (i_multiply_64/RoundingAdder/Madd_R_cy<55>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<56> (i_multiply_64/RoundingAdder/Madd_R_cy<56>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<57> (i_multiply_64/RoundingAdder/Madd_R_cy<57>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<58> (i_multiply_64/RoundingAdder/Madd_R_cy<58>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<59> (i_multiply_64/RoundingAdder/Madd_R_cy<59>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<60> (i_multiply_64/RoundingAdder/Madd_R_cy<60>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<61> (i_multiply_64/RoundingAdder/Madd_R_cy<61>)
     MUXCY:CI->O           1   0.020   0.000  i_multiply_64/RoundingAdder/Madd_R_cy<62> (i_multiply_64/RoundingAdder/Madd_R_cy<62>)
     XORCY:CI->O           2   0.239   0.497  i_multiply_64/RoundingAdder/Madd_R_xor<63> (i_multiply_64/expSigPostRound<63>)
     LUT4:I2->O            1   0.068   0.000  i_multiply_64/mux112 (mul_result<64>)
     FDE:D                     0.011          i_downsize/data_in_64
    ----------------------------------------
    Total                      3.338ns (2.260ns logic, 1.078ns route)
                                       (67.7% logic, 32.3% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'aclk'
  Total number of paths / destination ports: 1610 / 1159
-------------------------------------------------------------------------
Offset:              1.770ns (Levels of Logic = 2)
  Source:            aresetn (PAD)
  Destination:       i_datastall/data_out1_63 (FF)
  Destination Clock: aclk rising

  Data Path: aresetn to i_datastall/data_out1_63
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O            14   0.003   0.863  aresetn_IBUF (aresetn_IBUF)
     LUT6:I0->O          128   0.068   0.573  i_datastall/_n0146_inv1 (i_datastall/_n0146_inv)
     FDE:CE                    0.263          i_datastall/data_out1_0
    ----------------------------------------
    Total                      1.770ns (0.334ns logic, 1.436ns route)
                                       (18.9% logic, 81.1% route)

=========================================================================
Timing constraint: Default OFFSET OUT AFTER for Clock 'aclk'
  Total number of paths / destination ports: 72 / 67
-------------------------------------------------------------------------
Offset:              1.607ns (Levels of Logic = 2)
  Source:            i_datastall/stall_data_FSM_FFd2 (FF)
  Destination:       s_axis_input_tready1 (PAD)
  Source Clock:      aclk rising

  Data Path: i_datastall/stall_data_FSM_FFd2 to s_axis_input_tready1
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDC:C->Q            135   0.375   0.756  i_datastall/stall_data_FSM_FFd2 (i_datastall/stall_data_FSM_FFd2)
     LUT3:I0->O            2   0.068   0.405  i_datastall/stall_data_FSM_FFd3-In11 (s_axis_input_tready1_OBUF)
     OBUF:I->O                 0.003          s_axis_input_tready1_OBUF (s_axis_input_tready1)
    ----------------------------------------
    Total                      1.607ns (0.446ns logic, 1.161ns route)
                                       (27.8% logic, 72.2% route)

=========================================================================

Cross Clock Domains Report:
--------------------------

Clock to Setup on destination clock aclk
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
aclk           |    3.338|         |         |         |
---------------+---------+---------+---------+---------+

=========================================================================


Total REAL time to Xst completion: 14.00 secs
Total CPU time to Xst completion: 13.83 secs
 
--> 


Total memory usage is 438416 kilobytes

Number of errors   :    0 (   0 filtered)
Number of warnings :   11 (   0 filtered)
Number of infos    :   17 (   0 filtered)

